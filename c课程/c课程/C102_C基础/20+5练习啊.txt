1.请编写一个函数void fun(char *tt,int pp[]),统计在tt字符中"a"到"z"26各字母各自出现的次数，并依次放在pp所指的数组中。

2.编写函数fun,功能是：根据以下公式计算s,计算结果作为函数值返回；n通过形参传入。s=1+1/(1+2)+1/(1+2+3)+.......+1/(1+2+3+4+......+n) 

3.编写一个函数fun，它的功能是：根据以下公式求P的值，结果由函数值带回。m与n为两个正整数，且要求m>n。 p=m!/n!*(m-n)! 

4.编写函数fun,它的功能是：利用以下的简单迭代方法求方程cos(x)-x=0的一个实根。 
迭代步骤如下：(1)取x1初值为0.0； (2)x0=x1,把x1的值赋各x0; 

(3)x1=cos(x0),求出一个新的x1; 

(4)若x0-x1的绝对值小于0.000001，则执行步骤(5),否则执行步骤(2); 

(5)所求x1就是方程cos(x)-x=0的一个实根，作为函数值返回。 
程序将输出Root=0.739085。 


5.编写一个函数，求一个nubmer个元素的数组arrow的中数据的平均数，返回
int avr(int arrow[], int number)

6.编写一个函数，求出能够满足“整除2余1，整除3余2，整除4余3，整除5余4”的最小的数，并返回
int function()

7.写一个函数，将整形数inter转化成字符串放入string[]输出
void itoa(int inter, char string[])

8.编写一个函数fun，它的功能是：实现两个字符串比较strcmp()
int strcmp(char *string1, char *string2)


9.请编写函数fun，其功能是：将两个两位数的正整数a,b合并成一个整数放在c中。合并的方式是：将a数的十位和个位依次放在c数的千位和十位上，b数的十位和个位数依次放在c数的百位和个位上。 
int func(int a, int b)

10.写一个函数将一个字符串string的中出现的敏感字符串point每个字符转化为*号
void func(char string[], char point[])

11.写一个函数，删除字符串中所有的空格（可用strlen验证串尾的空格是否被删除）
void del_space(char *string)

12.求n以内(不包括n)同时能被3与7整除的所有自然数之和的平方根s，并作为函数值返回。  
float func(int n)

13.编写函数fun,该函数的功能是：从字符中删除指定的字符，同一字母的大、小写按不同字符处理。 

14.请编写一个函数fun，它的功能时：求Fibonacci数列中大于t的最小的一个数，结果由函数返回。其中Fibonacci数列F(n)的定义为： 
F(0)=0,F(1)=1,F(n)=F(n-1)+F(n-2) 

15.请编写函数fun，计算并输出给定10个数的标准差：
标准差就是每隔样本个体与样本的平均数的差的平方和的开根号
 
16.请编写函数fun ，其功能是：计算并输出3到n之间所有素数的平方根之和。 

17.编写void atoi(char s[],int *n)函数：将全是数字组成的字符串转化成整数保存在n指向的地址里。

18.实现库函数strncpy；函数strncpy(s, t, n)将t中最多前n个字符复制到s中。

19编写函数strindex(s, t)，该函数返回字符串t在字符串s中出现的起始位置。如果s中不包含t，则返回-1。
函数原型： int strindex(char s[], char t[])（不得使用string.h）

20.实现库函数strncat和strncmp他们最多对参数字符串中的前n个字符进行操作


****************************************************plus************************************************


写一个函数，从键盘得到整行的输入

写一个函数，输入为一个字符串，返回值为int，作用是将输入的字符串转化为整形后返回，例如字符串“123”转化为整形数123，只要求转化正数，不用转化负数，小数

在上一个函数的基础上增加判断，也就是输入的必须全部是数字，比如字符串为“1a3”，“-123123”，“12.5”，“123  123”时不能转化，返回-1

a.写一个程序，希望从输入上得到一个整形正数，当用户输入非法时提示并让用户重新输入直到用户正确输入（可以将上面的程序结合使用，或者自己另辟蹊径）

写一个函数直到键盘上输入EOF之前统计一共输入了多少行
写一个函数直到键盘上输入EOF之前统计一共输入了多少字
写一个函数直到键盘上输入EOF之前统计一共输入了多少个单词（不用在意单词是否存在，如“1 4\n”就有2个单词而单纯的一行只有”\n“可不能算是一个单词）

b1.写一个程序，先进行输入，直到EOF
然后由用户选择是统计行数，字数还是单词数，或者是重新做一次输入，以及退出

b2.做一个完整的界面，告知用户下一步做什么，或者是说做了错误的输入（方法或许可以参考a），比方说：
****************************************
*now you finnished input,do you want to*
*                                      *
*1.litter count                        *
*2.line count                          *
*3.word count                          *
*4.input again                         *
*5.exit                                *
****************************************
a
you do wrong input ,plz input(1~5)
5
do you want to exit?[y/n]
yu
you do wrong input, plz input[y/n]
yes

能将数据写入文件，并再次读取
写一个程序建立一个整形数组，任意赋值之后，将数组写入文件

再写一个程序，将文件的数组读出来

将整形数组转化为结构体数组
struct student
{
	char name[20];
	int number;
}

c1.写一段代码，能够处理5个如上的学生信息，菜单选项包括：重新输入5个学生的信息，修改下标为n的学生的信息，从文件中读取信息
向文件写入信息

c2.界面漂亮点，人性化点


********************************************************plus*****************************************

编写函数void itob(int n,char s[],int b)，将整数n转换为以b进制的数，并将转换结果以字符的形式保存到字符串s中。
例如，itob(n,s,16)把整数n格式化成十六进制整数保存在s中。当然b最多不能超过10+26(a~z可以代表9之后的10，11...)

编写一个函数，它的功能是strcasecmp(),虽然是比较，但是无视大小写的区别
int strcasecmp(char *string1, char *string2) 

请编写函数fun，该函数的功能是：判断整形数是否为回文?若是则函数返回1，主函数中输出YES，否则返回0，主函数中输出NO。回文是指顺读和倒读都是一样的。 

完成最简单的协议
void zip(char *pack, char *string)
将字符串string加上头， 写入pack字符串中
格式如下
例如string是"love me please"
那么执行函数zip后，pack中的字符串就是"14:love me please:end"
注意14虽然是字符串的长度，但是要转化为字符串型
然后函数
void unzip(char *string, char *pack)
负责将加过头尾的pack字符串，解析为原来的字符串，放入string中
 