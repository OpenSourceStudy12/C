#include <termios.h>#include <unistd.h>#include <stdio.h>/***************************************************************************  函数名称：  功    能：设置终端单键读取模式  输入参数：  返 回 值：  说    明： ***************************************************************************/struct termios stored_settings;void set_keypress(void){     struct termios new_settings;     tcgetattr(0,&stored_settings);     new_settings = stored_settings;    /* Disable canonical mode, and set buffer size to 1 byte */     new_settings.c_lflag &= (~ICANON);     new_settings.c_cc[VTIME] = 0;     new_settings.c_cc[VMIN] = 1;     tcsetattr(0,TCSANOW,&new_settings);     return;}/***************************************************************************  函数名称：  功    能：  输入参数：  返 回 值：  说    明：（设置成默认的读键模式）函数没有使用 ***************************************************************************/void reset_keypress(void){    tcsetattr(0,TCSANOW,&stored_settings);    return;}/***************************************************************************  函数名称：  功    能：设置终端不回显模式，（不映射键盘）  输入参数：  返 回 值：  说    明： ***************************************************************************/void echo_off(void){    struct termios new_settings;    tcgetattr(0,&stored_settings);    new_settings = stored_settings;    new_settings.c_lflag &= (~ECHO);    tcsetattr(0,TCSANOW,&new_settings);    return;}/***************************************************************************  函数名称：  功    能：  输入参数：  返 回 值：  说    明：（设置成默认的显示模式）函数没有使用 ***************************************************************************/void echo_on(void){    tcsetattr(0,TCSANOW,&stored_settings);    return;}int main(){	char ch;	int count=0;
	char password[10]={0};
		char *pstr=password;	set_keypress();		echo_off();	while(1)	{		if(count == 6)			{	break;}		ch = getchar();		putchar('*');		*pstr++=ch; count++;		}	echo_on();	printf("Test: getchar=%s\n", password);		return 1;	}